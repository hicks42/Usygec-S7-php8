security:
  password_hashers:
    App\Entity\User: "auto"
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: "auto"

  providers:
    app_user_provider:
      entity:
        class: App\Entity\User
        property: email

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    main:
      lazy: true
      provider: app_user_provider

      form_login:
        login_path: app_login
        check_path: app_login
        username_parameter: email
        password_parameter: password
        default_target_path: lobby
        enable_csrf: true

      logout:
        path: app_logout

      # json_login:
      #   check_path: api_login
      # custom_authenticator: App\Security\UsygecAuthenticator

      remember_me:
        secret: "%kernel.secret%"
        lifetime: 604800
        path: /
        always_remember_me: true

      # activate different ways to authenticate
      # https://symfony.com/doc/current/security.html#firewalls-authentication

      # https://symfony.com/doc/current/security/impersonating_user.html
      switch_user: true

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
    # Pages publiques (sans connexion)
    - { path: ^/$, roles: PUBLIC_ACCESS }
    - { path: ^/contact, roles: PUBLIC_ACCESS }

    # Routes accessibles aux anonymes (inscription, connexion, reset password)
    - { path: ^/register, roles: PUBLIC_ACCESS }
    - { path: ^/login, roles: PUBLIC_ACCESS }
    - { path: ^/reset-password, roles: PUBLIC_ACCESS }

    # Routes protégées nécessitant ROLE_USER (accès EZR et BAM)
    - { path: ^/companies, roles: ROLE_USER }
    - { path: ^/activities, roles: ROLE_USER }
    - { path: ^/ezreview, roles: ROLE_USER }

    # Administration
    # - { path: ^/usygec/settings, roles: [ROLE_ADMIN] }

  role_hierarchy:
    ROLE_ADMIN:
      [ROLE_USER, ROLE_IDFRACON, ROLE_BAM, ROLE_EZR, ROLE_ALLOWED_TO_SWITCH]
